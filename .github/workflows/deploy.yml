name: Build and Deploy
on:
  push:
    branches:
      - 'main'
  workflow_dispatch:
    inputs:
      bcrCommitHash:
        description: 'Commit hash of the BCR repository to use as the source for the build'
        type: string
  workflow_call:
    inputs:
      basePath:
        description: 'Base path for the build, see https://nextjs.org/docs/app/api-reference/config/next-config-js/basePath'
        type: string
      bcrCommitHash:
        description: 'Commit hash of the BCR repository to use as the source for the build'
        type: string
permissions:
  # Required so we can deploy to the gh-pages branch
  contents: write
  # To post the PR preview link as a comment 
  pull-requests: write
jobs:
  build-and-deploy:
    concurrency: ci-${{ github.ref }} # Recommended if you intend to make multiple deployments in quick succession.
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v5

      - uses: pnpm/action-setup@v2.4.1
        with:
          run_install: true

      - name: Install direnv
        run: |
          sudo apt-get install -y direnv
          eval "$(direnv hook bash)"

      - name: Install required binaries
        run: |
          direnv allow .
          eval "$(direnv export bash)"
          # GHA steps run as non-interactive shells so they don't source the .bashrc
          echo "PATH=$PATH" >> $GITHUB_ENV
          bazel run //bin:bazel_env

      - name: Checkout BCR submodule
        run: |
          git submodule update --init -- data/bazel-central-registry

      - name: Checkout latest commit of BCR submodule
        if:  ${{ !inputs.bcrCommitHash }}
        working-directory: data/bazel-central-registry
        run: |
          git checkout origin/main

      - name: Checkout specific commit of BCR submodule
        if:  ${{ inputs.bcrCommitHash }}
        working-directory: data/bazel-central-registry
        run: |
          git checkout ${{ inputs.bcrCommitHash }}

      - name: Find latest successful run of fetch_repo_metadata workflow
        id: find-run
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          run_id=$(gh run list \
            --workflow "fetch_repo_metadata.yml" \
            --branch main \
            --json databaseId,status,conclusion \
            --jq 'map(select(.status=="completed" and .conclusion=="success")) | first | .databaseId')
          echo "run_id=$run_id" >> $GITHUB_OUTPUT

      - name: Download and extract metadata artifact
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh run download ${{ steps.find-run.outputs.run_id }} \
            --name github_metadata \
            --dir data/github_metadata

      - name: Build 🔧 # Outputs the result to the 'out' folder.
        run: pnpm run build
        env:
          NEXT_PUBLIC_BASE_PATH: ${{ inputs.basePath }}

      - name: Deploy PR Preview
        env:
            HAS_SECRET: ${{ secrets.BCR_UI_PREVIEW_PUBLISH }}
        # Pull requests from forks won't have a token to publish
        if: ${{ github.event_name == 'pull_request' && env.HAS_SECRET != '' }}
        uses: rossjrw/pr-preview-action@9f77b1d057b494e662c50b8ca40ecc63f21e0887 # v1.6.2
        with:
            source-dir: ./out/
            token: ${{ secrets.BCR_UI_PREVIEW_PUBLISH }}
            deploy-repository: bazel-contrib/bcr-ui-preview

      - name: Deploy to GitHub Pages
        if: github.event_name == 'push' || github.event_name = 'workflow_dispatch'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
            folder: out
