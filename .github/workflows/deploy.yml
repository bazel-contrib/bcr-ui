name: Build and Deploy
on:
  push:
    branches:
      - 'main'
  workflow_dispatch:
    inputs:
      bcrCommitHash:
        description: 'Commit hash of the BCR repository to use as the source for the build'
        type: string
  workflow_call:
    inputs:
      bcrCommitHash:
        description: 'Commit hash of the BCR repository to use as the source for the build'
        type: string
permissions:
  # Required so we can deploy to the gh-pages branch
  contents: write
jobs:
  build-and-deploy:
    concurrency: ci-${{ github.ref }} # Recommended if you intend to make multiple deployments in quick succession.
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: true

      - name: Install pnpm
        uses: pnpm/action-setup@v2.4.1
        with:
          version: 8.6.12

      - name: Install required binaries
        run: |
          ./install_bins.sh

      - name: Checkout latest commit of BCR submodule
        if:  ${{ !inputs.bcrCommitHash }}
        working-directory: data/bazel-central-registry
        run: |
          git checkout origin/main

      - name: Checkout specific commit of BCR submodule
        if:  ${{ inputs.bcrCommitHash }}
        working-directory: data/bazel-central-registry
        run: |
          git checkout ${{ inputs.bcrCommitHash }}

      - name: Find latest successful run of another workflow
        id: find-run
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          run_id=$(gh run list \
            --workflow "fetch_repo_metadata.yml" \
            --branch main \
            --json databaseId,status,conclusion \
            --jq 'map(select(.status=="completed" and .conclusion=="success")) | first | .databaseId')
          echo "run_id=$run_id" >> $GITHUB_OUTPUT
  
      - name: Download and extract artifact
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh run download ${{ steps.find-run.outputs.run_id }} \
            --name github_metadata \
            --dir data/github_metadata

      - name: Install and Build ðŸ”§ # This example project is built using npm and outputs the result to the 'build' folder. Replace with the commands required to build your project, or remove this step entirely if your site is pre-built.
        run: |
          pnpm install --frozen-lockfile
          pnpm run build

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: out
